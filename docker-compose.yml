services:

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    # image: ip/makrotos/prophecy:latest
    restart: unless-stopped
    pull_policy: always
    container_name: frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - DOMAIN=Prophecy.ru
    networks:
      - Prophecy-network
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - Prophecy-network

  frontend-dev-Prophecy:
    image: node:lts-alpine
    container_name: frontend-dev-Prophecy
    command: sh -c "npm install debug@4.3.4 && npm ci --include=dev && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    working_dir: /app
    volumes:
      - ./Frontend:/app
      - ./Frontend/tmp:/app/tmp
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - Prophecy-network
    depends_on:
      - backend

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend-prophecy
    restart: unless-stopped
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_INTERNAL_PORT=5432
      - DB_USER=prophecy_user
      - DB_PASSWORD=prophecy_password
      - DB_NAME=prophecy_db
      - JWT_SECRET=prophecy_jwt_secret_key_change_in_production
      - TELEGRAM_BOT_TOKEN=123456789:ABCDEFabcdef1234567890ABCDEFabcd
    networks:
      - Prophecy-network
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: postgres-prophecy
    restart: unless-stopped
    environment:
      - POSTGRES_DB=prophecy_db
      - POSTGRES_USER=prophecy_user
      - POSTGRES_PASSWORD=prophecy_password
    ports:
      - "5432:5432"
    networks:
      - Prophecy-network
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  Prophecy-network:
    driver: bridge

volumes:
  pgdata:
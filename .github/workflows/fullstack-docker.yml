name: Full Stack Docker CI

on:
  push:
    branches: ["main"]
    paths:
      - "Backend/**"
      - "Frontend/**"
      - ".github/workflows/fullstack-docker.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "Backend/**"
      - "Frontend/**"
  workflow_dispatch:

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch') &&
      (contains(join(github.event.head_commit.modified, ','), 'Backend/') || github.event_name == 'workflow_dispatch')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Allow insecure registry
        run: |
          echo '{ "insecure-registries":["${{ secrets.REGISTRY_URL }}"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Backend Docker image
        run: |
          cd Backend
          docker build -t ${{ secrets.REGISTRY_URL }}/makrotos/prophecy-backend:latest .

      - name: Push Backend Docker image
        run: docker push ${{ secrets.REGISTRY_URL }}/makrotos/prophecy-backend:latest

  build-and-push-frontend:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch') &&
      (contains(join(github.event.head_commit.modified, ','), 'Frontend/') || github.event_name == 'workflow_dispatch')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Allow insecure registry
        run: |
          echo '{ "insecure-registries":["${{ secrets.REGISTRY_URL }}"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Frontend Docker image
        run: |
          cd Frontend
          docker build --target prod -t ${{ secrets.REGISTRY_URL }}/makrotos/prophecy-frontend:latest .

      - name: Push Frontend Docker image
        run: docker push ${{ secrets.REGISTRY_URL }}/makrotos/prophecy-frontend:latest

  test-backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Backend Docker image (test)
        run: |
          cd Backend
          docker build -t prophecy-backend:test .

  test-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Frontend Docker image (test)
        run: |
          cd Frontend
          docker build --target prod -t prophecy-frontend:test .

/**
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞
 */

/**
 * –ü–∞—Ä—Å–∏—Ç JWT —Ç–æ–∫–µ–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É (payload)
 * @param {string} token - JWT —Ç–æ–∫–µ–Ω
 * @returns {Object|null} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null
 */
export function parseJWTToken(token) {
  console.log("üîç –ü–∞—Ä—Å–∏–Ω–≥ JWT —Ç–æ–∫–µ–Ω–∞");
  if (!token) {
    console.log("‚ö†Ô∏è –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    return null;
  }

  try {
    const base64Url = token.split(".")[1];
    console.log("üîç base64Url —á–∞—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞:", base64Url);
    const base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
    console.log("üîç base64 –ø–æ—Å–ª–µ –∑–∞–º–µ–Ω—ã —Å–∏–º–≤–æ–ª–æ–≤:", base64);
    const jsonPayload = decodeURIComponent(
      atob(base64)
        .split("")
        .map((c) => "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2))
        .join("")
    );
    console.log("üîç –†–∞—Å–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π payload:", jsonPayload);

    const parsedPayload = JSON.parse(jsonPayload);
    console.log("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:", parsedPayload);
    return parsedPayload;
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–∫–µ–Ω–∞:", e);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ JWT —Ç–æ–∫–µ–Ω–∞
 * @returns {Object|null} –û–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–ª–∏ null
 */
export function getUserInfoFromToken() {
  const token = localStorage.getItem("jwt_token");
  console.log(
    "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Ç–æ–∫–µ–Ω–∞:",
    token ? "–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω" : "–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
  );
  if (!token) return null;

  const payload = parseJWTToken(token);
  console.log("üîç –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", payload);
  if (!payload) return null;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–æ–∫–µ–Ω
  const currentTime = Math.floor(Date.now() / 1000);
  if (payload.exp <= currentTime) {
    console.log("‚ö†Ô∏è –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫");
    return null;
  }

  const userInfo = {
    id: payload.user_id,
    telegramId: payload.telegram_id,
    generatedName: payload.generated_name,
    isAdmin: payload.is_admin || false,
    role: payload.role || null,
    issuedAt: payload.iat,
    expiresAt: payload.exp,
    issuer: payload.iss,
  };

  console.log("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Ç–æ–∫–µ–Ω–∞:", userInfo);
  return userInfo;
}
